<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->

	<annotation-driven />


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->

	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->

	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<context:component-scan
		base-package="com.kh.honeypoint" />

	<beans:bean id="jsonView"
		class="net.sf.json.spring.web.servlet.view.JsonView" />

	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
		<!-- 현재 2개의 ViewResolver를 가지고 있으므로 어떤 ViewResolver를 먼저 사용할 것인지 order라는 
			속성을 통해 순서를 지정 0으로 지정하지 않으면 beanName으로 매핑되지 못함 -->
	</beans:bean>

	<!-- interceptor 등록 -->
	<interceptors>
		<!-- <interceptor>
			<mapping path="/*"/>
			<beans:bean id="loggerInterceptor"
			class="com.kh.spring.common.interceptor.LoggerInterceptor"/>
		</interceptor> -->
		<interceptor>
			<mapping path="/*list.do"/>
			<beans:bean id="loginInterceptor" class="com.kh.spring.common.interceptor.LoginInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- 어노테이션을 통한 AOP 적용을 위한 설정 -->
	<aop:aspectj-autoproxy/>
	<!--  해당 기능 관련 어노테이션이 붙은 메소드를 자동으로 읽어 오는 기능   -->
	<task:annotation-driven/>










</beans:beans>
